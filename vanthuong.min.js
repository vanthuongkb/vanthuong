! function(e, a) {
    "use strict";
    e.setupNavigation = function() {
        function e() {
            var e = a(".content nav.navbar");
            if (e.length > 0) {
                var t = 1200,
                    n = e.height();
                a(window).on("scroll", {
                    previousTop: 0
                }, function() {
                    if (a(window).width() > t) {
                        var r = a(window).scrollTop();
                        r < this.previousTop ? r > 0 && e.hasClass("is-fixed") ? e.addClass("is-visible") : e.removeClass("is-visible is-fixed") : (e.removeClass("is-visible"), r > n && !e.hasClass("is-fixed") && e.addClass("is-fixed")), this.previousTop = r
                    }
                })
            }
        }

        function t() {
            function e() {
                var e = a(this);
                n(e)
            }

            function t(e) {
                function t() {
                    var e = r.find(".dropdown-toggle"),
                        a = e.attr("aria-expanded");
                    r.toggleClass("open"), e.attr("aria-expanded", "true" === a ? "false" : "true")
                }
                var r = a(this);
                e.preventDefault(), n(r, t)
            }

            function n(e, t) {
                e.find(".dropdown-menu").first().stop(!0, !0).slideToggle(200, "linear", function() {
                    a.isFunction(t) && t()
                })
            }
            var r = a("nav.navbar .dropdown");
            r.on("show.bs.dropdown", e), r.on("hide.bs.dropdown", t)
        }
        e(), t()
    }, e.updateCopyrightYear = function() {
        a("#year").html((new Date).getFullYear())
    }, e.search = {}, e.search.focus = function() {
        a(".search-page .form-search-input").focus().each(function() {
            if (this.setSelectionRange) {
                var e = a(this).val().length;
                this.setSelectionRange(e, e)
            }
        })
    }, e.setupPagination = function(e) {
        function t(e) {
            e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var a = new RegExp("[\\?&]" + e + "=([^&#]*)"),
                t = a.exec(location.search);
            return null == t ? "" : decodeURIComponent(t[1].replace(/\+/g, " "))
        }

        function n(a, t) {
            for (var n = Math.ceil(a.length / t), r = [], i = 0; n > i; i++) {
                var o = i * e.postsPerPage;
                r.push(a.slice(o, o + parseInt(e.postsPerPage)))
            }
            return r
        }

        function r(a) {
            var t = "/search",
                n = "/";
            if (-1 !== location.href.indexOf("/search/label/")) {
                var r = (location.href, p());
                t = "/search/label/" + r, n = "/search/label/" + r + "?&max-results=" + e.postsPerPage
            }
            if (0 >= a) return n;
            var i = m[a - 1][e.postsPerPage - 1];
            if (i) {
                var o = i.published.$t,
                    s = encodeURIComponent(o.substring(0, 19) + o.substring(23, 29));
                t += "?updated-max=" + s + "&max-results=" + e.postsPerPage
            } else t = "#";
            return t
        }

        function i() {
            for (var e = 0; e < m.length; e++)
                for (var a = 0; a < m[e].length; a++) {
                    var t = m[e][a],
                        n = t.published.$t,
                        r = encodeURIComponent(n.substring(0, 19) + n.substring(23, 29));
                    if (-1 !== location.href.indexOf(r)) return parseInt(e + 1)
                }
            return 0
        }

        function o(e) {
            return a(v === e ? '<li class="active"><span>' + parseInt(e + 1) + '<span class="sr-only">(current)</span></span></li>' : '<li><a href="' + r(e) + '">' + parseInt(e + 1) + "</a></li>")
        }

        function s() {
            if (0 >= v) return a('<li class="disabled"><span aria-label="Previous"><span aria-hidden="true">&laquo;</span></span></li>');
            var e = r(v - 1),
                t = a('<li><a href="' + e + '" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>');
            return t
        }

        function l() {
            if (v === m.length - 1) return a('<li class="disabled"><span aria-label="Next"><span aria-hidden="true">&raquo;</span></span></li>');
            var e = r(v + 1),
                t = a('<li><a href="' + e + '" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>');
            return t
        }

        function c() {
            for (var a = v - Math.floor(e.maxVisiblePages / 2); 0 > a;) a++;
            for (; a + parseInt(e.maxVisiblePages) > m.length && v >= a && a >= v - e.maxVisiblePages && a > 0;) a--;
            return a
        }

        function u(a) {
            for (var t = a + e.maxVisiblePages; t > m.length;) t--;
            return t
        }

        function d(t) {
            if (t.feed.entry && t.feed.entry.length > 0 && t.feed.entry.length >= 150) return f(), void a("nav.nav-nextprev").show();
            if (t.feed.entry && t.feed.entry.length > 0 && (m = n(t.feed.entry, e.postsPerPage), m.length > 1)) {
                v = i();
                var r = a(".nav-pagination ul.pagination");
                r.append(s()), r.append(o(0));
                for (var d = c() + 1, p = u(d) - 1, h = d; p > h; h++) h === d && h > 2 ? r.append("<li><span>...</span></li>") : h === p - 1 && p < m.length - 2 ? r.append("<li><span>...</span></li>") : r.append(o(h));
                r.append(o(m.length - 1)), r.append(l()), a("nav.nav-pagination").show()
            }
        }

        function p() {
            if (-1 !== location.href.indexOf("/search/label/")) {
                var e = location.href.indexOf("/search/label/") + 14;
                if (-1 === location.href.indexOf("?")) return location.href.substring(e);
                var a = location.href.indexOf("?");
                return location.href.substring(e, a)
            }
            return ""
        }

        function h() {
            var e = p();
            return "" !== e && (e = "/-/" + e), "/feeds/posts/summary" + e + "?alt=json-in-script&max-results=150"
        }

        function f() {
            var e = a(".pager").find('a[href=""]');
            e.parent("li").remove()
        }

        function g() {
            a("nav.nav-nextprev").hide(), a("nav.nav-pagination").hide(), -1 === location.href.indexOf("?q=") && -1 === location.href.indexOf("&q=") ? a(".nav-pagination").length > 0 && a.ajax({
                type: "GET",
                url: h(),
                contentType: "application/json",
                dataType: "jsonp",
                success: function(e) {
                    d(e)
                }
            }) : a(".pager").length > 0 && (a("nav.nav-nextprev").show(), f())
        }
        var m = [],
            v = 0,
            w = {
                postsPerPage: t("max-results") || 12,
                maxVisiblePages: 7,
                previousText: "previous",
                nextText: "next"
            };
        e = a.extend({}, e, w), g()
    }, e.setupBreadcrumbs = function(e) {
        function t() {
            var e = a(".article-page .breadcrumb");
            if (e.length > 0)
                for (var t = ["Core Java Tutorial", "Java Servlet", "SEO", "Facebook", "Spring Framework", "Java 8 Tutorial"], n = e.find("li.active"), r = 0; r < t.length; r++) {
                    var i = n.find('a[data-tag="' + t[r] + '"]');
                    if (i.length > 0) return n.before(a("<li typeof=\"v:Breadcrumb\"></li>").append(i.clone().removeClass())), void i.remove()
                }
        }
        t()
    }, e.setupRelatedArticles = function(e) {
        function t() {
            var e = [];
            return a('a[rel="tag"]').each(function() {
                var t = a.trim(a(this).text().replace(/\n/g, "")); - 1 === a.inArray(t, e) && (e[e.length] = t)
            }), e
        }

        function n(e) {
            for (var a = 0; a < d.length; a++)
                if (d[a].id === e) return a;
            return -1
        }

        function r(e) {
            for (var a = 0; a < e.link.length; a++)
                if ("alternate" === e.link[a].rel) return e.link[a].href;
            return ""
        }

        function i(e) {
            if (e) {
                var a = e.id.$t,
                    t = r(e),
                    i = n(a);
                if (i >= 0) d[i].score++;
                else {
                    var o = e.title.$t,
                        s = 1;
                    d.push({
                        title: o,
                        url: t,
                        score: s,
                        id: a
                    })
                }
            }
        }

        function o(e, a) {
            return e.sort(function(e, t) {
                var n = parseInt(e[a]),
                    r = parseInt(t[a]);
                return r - n
            })
        }

        function s(t) {
            u++;
            var n = t.feed.entry;
            if (n)
                for (var r = 0; r < n.length; r++) i(n[r]);
            if (u >= c.length) {
                d = o(d, "score"), d = d.splice(0, e.maxPosts);
                var s = a(".article-related");
                s.append("<ul></ul>");
                for (var l = 0; l < d.length; l++) s.find("ul").append('<li><a href="' + d[l].url + '" data-score="' + d[l].score + '">' + d[l].title + "</a></li>")
            }
        }

        function l() {
            if (a(".article-related").length > 0) {
                c = t();
                for (var n = 0; n < c.length; n++) a.ajax({
                    url: "/feeds/posts/summary/",
                    data: {
                        category: c[n],
                        "max-results": e.maxPostsPerTag,
                        alt: "json-in-script"
                    },
                    success: s,
                    dataType: "jsonp",
                    cache: !0
                })
            }
        }
        var c = [],
            u = 0,
            d = [],
            p = {
                maxPosts: 6,
                maxPostsPerTag: 6
            };
        e = a.extend({}, e, p), l()
    }, e.setupAuthor = function() {
        function e() {
            var e = a(".article-page");
            if (e.length > 0) {
                var t = [{
                        name: "Thương Nguyễn",
                        avatar: "https://lh3.googleusercontent.com/-eyFRguLg8UI/AAAAAAAAAAI/AAAAAAAACNY/jNNTcEwz9xY/s120-c/photo.jpg",
                        social: "https://plus.google.com/112584370687179756961"
                    }],
                    n = e.find("[data-author]").attr("data-author"),
                    r = a.grep(t, function(e, a) {
                        return e.name === n
                    })[0];
                r && (a(".article-meta .media a").attr("href", r.social), a(".article-meta .media-left img").attr("src", r.avatar))
            }
        }
        e()
    },  e.setupAnalytics = function() {
        function e() {
            window.ga = window.ga || function() {
                (window.ga.q = window.ga.q || []).push(arguments)
            }, window.ga.l = +new Date, window.ga("create", "UA-9340528-3", {
                cookieDomain: "www.vanthuong.com",
                siteSpeedSampleRate: 100
            }), window.ga("require", "linkid", "linkid.js"), window.ga("send", "pageview"), a.getScript("//www.google-analytics.com/analytics.js"), r()
        }

        function t(e) {
            e.clone().children().remove().end().text()
        }

        function n(e) {
            var a = e.attr("data-label");
            return a.length <= 0 && t(e), a.length <= 0 && (a = e.attr("href")), a
        }

        function r() {
            for (var e = [{
                    selector: ".navbar-nav a",
                    category: "Top navigation",
                    label: ""
                }, {
                    selector: "#follow a",
                    category: "Follow Us",
                    label: ""
                }, {
                    selector: ".article-related ul a",
                    category: "Related Article",
                    label: ""
                }], t = 0; t < e.length; t++) a(e[t].selector).attr("data-category", e[t].category), a(e[t].selector).attr("data-label", e[t].label), a(e[t].selector).on("click", function() {
                window.ga("send", "event", a(this).attr("data-category"), n(a(this)))
            })
        }
        e()
    }, e.setupPageNotFound = function() {
        function e() {
            var e = a("#notfound"),
                t = document.URL.substring(document.URL.lastIndexOf("/") + 1);
            t = decodeURIComponent((t + "").replace(/\+/g, "%20")), t.lastIndexOf(".") > 0 && (t = t.substring(0, t.lastIndexOf("."))), t = t.replace(/[\-\_\+]+/g, " ");
            var n = e.find("form input.form-search-input");
            n.val(t), n.focus()
        }
        e()
    }, a(document).ready(function() {
        e.updateCopyrightYear(), e.setupNavigation(), e.search.focus(), e.setupPagination(), e.setupBreadcrumbs(), e.setupRelatedArticles(), e.setupAuthor(), e.setupAnalytics(), e.setupPageNotFound()
    }), a(window).load(function() {
    })
}(window.vanthuong = window.vanthuong || {}, jQuery);
