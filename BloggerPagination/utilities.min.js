$(document).ready(function(e) {
  var currentUrl = location.href;
  var rcp_numposts=5;
  var rcp_snippet_length=150;
  var rcp_comment='Bình luận';
  var rcp_disable='No Comments';
  
  var pageNaviConf = {
    homepageUrl : websiteUrl,
    postPerPage: getMaxResult("max-results") || 7,
    numOfPages: 5,
    firstText: "Đầu tiên",
    lastText: "Cuối cùng",
    nextText: "»",
    prevText: "«"
  }
  function getMaxResult(e) {
            e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var a = new RegExp("[\\?&]" + e + "=([^&#]*)"),
                t = a.exec(location.search);
            return null == t ? "" : decodeURIComponent(t[1].replace(/\+/g, " "))
  }
  
  function getLabelName() {
    var indexLabel = indexSearchLabel();
    if (-1 !== indexLabel) {
        var startPositionOfLabelName = indexLabel + 14;
        var endPositionOfLabelName = currentUrl.indexOf("?");
        if (-1 === endPositionOfLabelName) {
          return currentUrl.substring(startPositionOfLabelName);
        }
        return currentUrl.substring(startPositionOfLabelName, endPositionOfLabelName);
    }
    return "";
  }
  
  function indexSearchLabel(){
    return currentUrl.indexOf("/search/label/");
  }
  
  function getAjaxUrl() {
      var labelName = getLabelName();
      if("" !== labelName) {
        labelName = "/-/" + labelName;
      } 
      return "/feeds/posts/summary" + labelName + "?alt=json-in-script&max-results=99999";
  }
  
  function getQueryString() {
    var queryString = "";
    if(-1 !== currentUrl.indexOf("?q=") || -1 !== currentUrl.indexOf("&q=")) { 
      var url = -1 !== currentUrl.indexOf("?q=")
                  ? currentUrl.substring(currentUrl.indexOf("?q="))
                  : currentUrl.substring(currentUrl.indexOf("&q="));
      queryString = -1 !== url.indexOf("&") ? url.substring(3, url.indexOf("&")) : url.substring(3);
    }
    return queryString;
  }
  
  function getCurrentPage(totalPage, data) {
    var curr = 1;
    var currentUpdatedMax = getCurrentUpdateMax();
    if ("" !== currentUpdatedMax) {
      curr = getCurrentPageByEntryPosition(data, currentUpdatedMax);
    }
    return curr;
  }
  
  function getCurrentPageByEntryPosition(data, currentUpdatedMax) {
    var currentPage = 1;
    for(var pos = 0; pos < data.feed.entry.length; pos ++) {
      var publishedTime = convertPublishedTime(data.feed.entry[pos].published.$t);
      if(currentUpdatedMax === publishedTime) {
        currentPage = getNumOfPage((pos+1 * pageNaviConf.postPerPage));
        break;
      }
    }
    return currentPage;
  }
  
  function convertPublishedTime(pulishedTime) {
    return pulishedTime.substring(0, 19) + pulishedTime.substring(23, 29);
  }
  
  function getCurrentUpdateMax() {
    var updatedMax = "";
    var firstIndexOf = currentUrl.indexOf("/search?updated-max=");
    var query = "/search/label/" + getLabelName() + "?updated-max=";
    var secondIndexOf = currentUrl.indexOf(query);
    if(-1 !== firstIndexOf || -1 !== secondIndexOf) {
      updatedMax = -1 !== firstIndexOf
          ? getUpdatedMaxFromURL(firstIndexOf + 20)
          : getUpdatedMaxFromURL(secondIndexOf + query.length);
    }
    return decodeURIComponent(updatedMax);
  }
  
  function getUpdatedMaxFromURL(indexStr) {
    var absoluteUrl = currentUrl.substring(indexStr, currentUrl.length);
    return absoluteUrl.indexOf("&") !== -1 ? absoluteUrl.substring(0, absoluteUrl.indexOf("&")) : absoluteUrl;
  }
  
  function getNumOfPage(NumOfEntries) {
    return Math.ceil(NumOfEntries / pageNaviConf.postPerPage);
  }
  
  function pageNavi(data) {
    if('entry' in data.feed) {
      var totalPage = getNumOfPage(data.feed.entry.length);
      var pageLink = [];
      var currentPage = 1;
      if(totalPage <= 1) {
        pageLink.push("/?max-results=" + pageNaviConf.postPerPage);
      } else {
        var isLabelPage = -1 !== currentUrl.indexOf("/search/label/");
          currentPage = getCurrentPage(totalPage, data);
        if(isLabelPage) {
          pageLink.push("/search/label/" + getLabelName() + "?max-results=" + pageNaviConf.postPerPage);
        } else {
          pageLink.push("/?max-results=" + pageNaviConf.postPerPage);
        }
        generateURL(pageLink, totalPage, data, isLabelPage);
      }
      generateDOM(pageLink, totalPage, currentPage);
    }
  }
  
  function generateURL(pageLink, totalPage, data, isLabelPage) {
    var baseUrl = isLabelPage ? "/search/label/" + getLabelName() + "?updated-max=" : "/search?updated-max=";
    
    for(var position = 2; position <= totalPage; ++position) {
      var post = (position - 1)*pageNaviConf.postPerPage - 1;
      pageLink.push(baseUrl
                    + encodeURIComponent(convertPublishedTime(data.feed.entry[post].published.$t))
                    + "&max-results="+pageNaviConf.postPerPage);
    }
  }
  
  function generateDOM(pageLink, totalPage, currentPage) {
    var html = '<span class="pages">Trang ' + currentPage + '/' + totalPage + '</span>';
    var currentPagePosition = Math.floor((pageNaviConf.numOfPages - 1) / 2);
    var startDisplayPosition = pageNaviConf.numOfPages - 1 - currentPagePosition;
    var currentPositionDisplay = currentPage - currentPagePosition;

    if(currentPositionDisplay <= 0) {
      currentPositionDisplay = 1;
    }
    
    var lastPage = currentPage + startDisplayPosition;

    if((lastPage - currentPositionDisplay) < pageNaviConf.numOfPages) {
      lastPage = currentPositionDisplay + pageNaviConf.numOfPages - 1;
    }
    
    if(lastPage > totalPage) {
      lastPage = totalPage;
      currentPositionDisplay = totalPage - pageNaviConf.numOfPages + 1;
    }
    
    if(currentPositionDisplay <= 0) {
      currentPositionDisplay = 1;
    }
    
    if(currentPositionDisplay > 1) {
      html += '<a href="' + pageLink[0]+'" class="first-text">'+pageNaviConf.firstText+'</a>';
    }
    
    if(currentPage > 1) {
      html += '<a href="'+pageLink[currentPage-2]+'" class="prev-text">'+pageNaviConf.prevText+'</a>';
    }
    
    for(var pos = currentPositionDisplay; pos <= lastPage; ++pos) {
      if(pos === currentPage) {
        html += '<span class="current">'+pos+'</span>';
      } else {
        html += '<a href="'+pageLink[pos-1]+'">'+pos+'</a>';
      }
    }
    
    if(currentPage < totalPage) {
      html += '<a href="'+pageLink[currentPage]+'" class="next-text">'+pageNaviConf.nextText+'</a>';
    }
    
    if(lastPage < totalPage) {
      html += '<a href="'+pageLink[totalPage -1]+'" class="last-text">'+pageNaviConf.lastText+'</a>';
    }
    
    $('#pagination').html(html);
  }

function displayRecentPosts(json) {
  if('entry' in json.feed) {
      var dw = '';
      dw += '<ul>';
      for (var i = 0; i < rcp_numposts && i < json.feed.entry.length; i++) {
          var entry = json.feed.entry[i];
          var rcp_posttitle = entry.title.$t;
          var rcp_get_snippet = "";
          if ('content' in entry) {
              rcp_get_snippet = entry.content.$t
          } else {
              if ('summary' in entry) {
                  rcp_get_snippet = entry.summary.$t
              }
          }
          rcp_get_snippet = rcp_get_snippet.replace(/<[^>]*>/g, "");
          var rcp_snippet = "";
          if (rcp_get_snippet.length < rcp_snippet_length) {
              rcp_snippet = rcp_get_snippet
          } else {
              rcp_get_snippet = rcp_get_snippet.substring(0, rcp_snippet_length);
              var space = rcp_get_snippet.lastIndexOf(" ");
              rcp_snippet = rcp_get_snippet.substring(0, space) + "&#133;";
          }
          var rcp_commentsNum = 0;
          var rcp_posturl ="", rcp_postdate = "";
          var rcp_thumb = "http://lh3.ggpht.com/--Z8SVBQZ4X8/TdDxPVMl_sI/AAAAAAAAAAA/jhAgjCpZtRQ/no-image.png";
          for (var j = 0; j < entry.link.length; j++) {
              if ('thr$total' in entry) {
                  rcp_commentsNum = entry.thr$total.$t > 0 ? entry.thr$total.$t : Math.floor((Math.random() * 100) + 1);
              }
              if (entry.link[j].rel == 'alternate') {
                  rcp_posturl = entry.link[j].href;
                  rcp_postdate = entry.published.$t;
                  if ('media$thumbnail' in entry) {
                      var rcp_thumb = entry.media$thumbnail.url
                  }
              }
          }
          dw += '<li>';
          dw += '<img alt="' + rcp_posttitle + '" src="' + rcp_thumb + '"/>';
          dw += '<div><a href="' + rcp_posturl + '" title="' + rcp_snippet + '">' + rcp_posttitle + '</a></div>';
          if (rcp_info == 'yes') {
              dw += '<span>' + rcp_postdate.substring(8, 10) + '/' + rcp_postdate.substring(5, 7) + '/' + rcp_postdate.substring(0, 4) + ' - ' + rcp_commentsNum + ' ' + rcp_comment + '</span>';
          };
          dw += '<div style="clear:both"></div></li>';
      };
      dw += '</ul>';
      $('#recent-posts').html(dw);
    }
  }
   
  var setupPagination = function () {
    var ajaxUrl = "";
    if(-1 === currentUrl.indexOf("?q=") && -1 === currentUrl.indexOf("&q=")) { // Not search page
      ajaxUrl = getAjaxUrl();
    } else {
      ajaxUrl = "/feeds/posts/summary?alt=json-in-script&max-results=99999&q="+encodeURIComponent(getQueryString());
    }

    $.ajax({
        type: "GET",
        url: pageNaviConf.homepageUrl + ajaxUrl,
        contentType: "application/json",
        dataType: "jsonp",
        success: function(data) {
          pageNavi(data);
        }
    });
  }
  var setupRecentPosts = function () {
    $.ajax({
          type: "GET",
          url: pageNaviConf.homepageUrl + "/feeds/posts/default?alt=json-in-script&max-results="+ rcp_numposts,
          contentType: "application/json",
          dataType: "jsonp",
          success: function(data) {
            displayRecentPosts(data);
          }
      });
  }
function jumpTo(){var o=parseInt(1e3)+100;$("html, body").animate({scrollTop:$("#wrap").offset().top},1e3).after(function(){setTimeout(function(){$("html, body").stop()},o)})}$(document).ready(function(){$(window).scroll(function(){var o=$(window).scrollTop();100>o?$("#backtotop").addClass("hidden").removeClass("display"):$("#backtotop").addClass("display").removeClass("hidden")})});

  // Date time
  
  var setupDateTime = function() {
    var mydate=new Date();
    var year=mydate.getYear();
    if (year < 1000)
      year+=1900;
    var day=mydate.getDay();
    var month=mydate.getMonth();
    var daym=mydate.getDate();
    if (daym<10)
      daym="0"+daym;
    var dayarray=new Array("Chủ nhật","Thứ hai","Thứ ba","Thứ tư","Thứ năm","Thứ sáu","Thứ bảy");
    var montharray=new Array("01","02","03","04","05","06","07","08","09","10","11","12");
    var dateTime = "<p>Hôm nay là: "+dayarray[day]+", "+daym+"/"+montharray[month]+"/"+year+"</p>";
    $("#top-navbar .time").html(dateTime);
  }
  
  var setupGoogleAnalytics = function() {
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-79888413-1', 'auto');
    ga('send', 'pageview');
  }
   
  // Call back
  setupRecentPosts();
  setupPagination();
  setupDateTime();
  setupGoogleAnalytics();

  $('#menu').on('click','.toggle-nav', function() {
	var $this = $(this);
	$this.('#main-menu').toggle('slow', 'easeOutBack');
  });
});